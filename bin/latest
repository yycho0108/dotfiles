#!/usr/bin/env python3

from pathlib import Path
import sys
import argparse
import logging


def parse_args(args):
    parser = argparse.ArgumentParser(
        formatter_class=argparse.ArgumentDefaultsHelpFormatter
    )
    parser.add_argument('-p', '--pattern', help='File filter',
                        type=str, default='*')
    parser.add_argument('-d', '--directory', help='Directory',
                        type=str, default=str(Path.cwd().resolve()))
    parser.add_argument('-f', '--file-only', help='Only include files',
                        action='store_true')
    return parser.parse_args(args)


def main(args=sys.argv[1:]):
    args = parse_args(args)
    logging.debug(args)

    if Path(args.pattern).is_absolute():
        # Resolve absolute glob.
        p = Path(args.pattern).relative_to(Path('/'))
        files = Path('/').glob(str(p))
    else:
        # Resolve relative glob.
        root = Path(args.directory)
        if not root.is_dir():
            logging.error('Invalid directory : {}'.format(root))
            return 1
        files = root.glob(args.pattern)
    # Optionally filter to files only.
    if args.file_only:
        files = [f for f in files if f.is_file()]
    latest = max(files, key=lambda f: f.stat().st_mtime)
    # Output latest file
    print(latest)
    return 0


if __name__ == '__main__':
    main()
